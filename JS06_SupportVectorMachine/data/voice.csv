"import numpy as np"
"import pandas as pd"
"from sklearn.model_selection import train_test_split"
"from sklearn.svm import SVC"
""
"voice = pd.read_csv('data/voice.csv')"
""
"display(voice.head())"
"print(voice.shape)"
""
"voice.isnull().sum()"
"voice.describe()"
""
"X = voice.iloc[:,:-1]"
"y = voice.iloc[:,-1] #voice['label]"
""
"print(X.shape)"
"print(y.shape)"
""
"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)"
""
"clf = SVC()"
"clf.fit(X_train, y_train)"
"y_pred = clf.predict(X_test)"
""
"from sklearn.metrics import accuracy_score"
""
"score = accuracy_score(y_test, y_pred)"
"print(score)"
""
"from sklearn.model_selection import GridSearchCV"
""
"params = {"
"'kernel': ['rbf', 'linear', 'poly'],"
"'C': [1, 5, 10, 50, 100],"
"'gamma': [0.0001, 0.0005, 0.001, 0.005]"
"}"
""
"grid = GridSearchCV(clf, params, n_jobs=-1)"
""
"%time grid.fit(X_train, y_train)"
""
"print(f'Best Estimator: {grid.best_estimator_}')"
"print(f'Score: {grid.best_score_}')"
